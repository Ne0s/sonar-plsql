package de.ne0.sonar.plsql.api;

import com.sonar.sslr.api.AstNode;
import com.sonar.sslr.api.TokenType;
import org.sonar.sslr.grammar.GrammarRuleKey;

/**
 * Keywords according to 
 * http://docs.oracle.com/cd/B28359_01/appdev.111/b31231/appb.htm
 * 
 * @author wessl03
 *
 */
public enum PlSQLKeyword implements TokenType, GrammarRuleKey {

  // Reserved words
	ABORT("abort"),
	ACCEPT("accept"),
	ACCESS("access"),
	ADD("add"),
	ADMIN("admin"),
	AFTER("after"),
	ALL("all"),
	ALLOCATE("allocate"),
	ALTER("alter"),
	ANALYZE("analyze"),
	AND("and"),
	ANY("any"),
	ARCHIVE("archive"),
	ARCHIVELOG("archivelog"),
	ARRAY("array"),
	ARRAYLEN("arraylen"),
	AS("as"),
	ASC("asc"),
	ASSERT("assert"),
	ASSIGN("assign"),
	AT("at"),
	AUTHORIZATION("authorization"),
	AVG("avg"),
	BACKUP("backup"),
	BASE_TABLE("base_table"),
	BECOME("become"),
	BEFORE("before"),
	BEGIN("begin"),
	BETWEEN("between"),
	BINARY_INTEGER("binary_integer"),
	BLOCK("block"),
	BODY("body"),
	BOOLEAN("boolean"),
	BY("by"),
	CACHE("cache"),
	CANCEL("cancel"),
	CASCADE("cascade"),
	CASE("case"),
	CHANGE("change"),
	CHAR("char"),
	CHAR_BASE("char_base"),
	CHARACTER("character"),
	CHECK("check"),
	CHECKPOINT("checkpoint"),
	CLOSE("close"),
	CLUSTER("cluster"),
	CLUSTERS("clusters"),
	COBOL("cobol"),
	COLAUTH("colauth"),
	COLUMNS("columns"),
	COMMIT("commit"),
	COMPILE("compile"),
	COMPRESS("compress"),
	CONNECT("connect"),
	CONSTANT("constant"),
	CONSTRAINT("constraint"),
	CONSTRAINTS("constraints"),
	CONTENTS("contents"),
	CONTINUE("continue"),
	CONTROLFILE("controlfile"),
	COUNT("count"),
	CRASH("crash"),
	CREATE("create"),
	CURRENT("current"),
	CURRVAL("currval"),
	CURSOR("cursor"),
	CYCLE("cycle"),
	DATA_BASE("data_base"),
	DATABASE("database"),
	DATAFILE("datafile"),
	DATE("date"),
	DBA("dba"),
	DEBUGOFF("debugoff"),
	DEBUGON("debugon"),
	DEC("dec"),
	DECIMAL("decimal"),
	DECLARE("declare"),
	DEFAULT("default"),
	DEFINITION("definition"),
	DELAY("delay"),
	DELETE("delete"),
	DELTA("delta"),
	DESC("desc"),
	DIGITS("digits"),
	DISABLE("disable"),
	DISMOUNT("dismount"),
	DISPOSE("dispose"),
	DISTINCT("distinct"),
	DO("do"),
	DOUBLE("double"),
	DROP("drop"),
	DUMP("dump"),
	EACH("each"),
	ELSE("else"),
	CONDITIONAL_ELSE("$else"),
	ELSIF("elsif"),
	CONDITIONAL_ELSIF("$elsif"),
	ENABLE("enable"),
	END("end"),
	CONDITIONAL_END("$end"),
	ENTRY("entry"),
	ESCAPE("escape"),
	EVENTS("events"),
	EXCEPT("except"),
	EXCEPTION("exception"),
	EXCEPTION_INIT("exception_init"),
	EXCEPTIONS("exceptions"),
	EXEC("exec"),
	EXECUTE("execute"),
	EXISTS("exists"),
	EXIT("exit"),
	EXPLAIN("explain"),
	EXTENT("extent"),
	EXTERNALLY("externally"),
	FALSE("false"),
	FETCH("fetch"),
	FLOAT("float"),
	FLUSH("flush"),
	FOR("for"),
	FORCE("force"),
	FOREIGN("foreign"),
	FORM("form"),
	FORTRAN("fortran"),
	FOUND("found"),
	FREELIST("freelist"),
	FREELISTS("freelists"),
	FROM("from"),
	FUNCTION("function"),
	GENERIC("generic"),
	GO("go"),
	GOTO("goto"),
	GRANT("grant"),
	GROUP("group"),
	GROUPS("groups"),
	HAVING("having"),
	IDENTIFIED("identified"),
	IF("if"),
	CONDITIONAL_IF("$if"),
	IN("in"),
	INCLUDING("including"),
	INDEX("index"),
	INDEXES("indexes"),
	INDICATOR("indicator"),
	INITRANS("initrans"),
	INSERT("insert"),
	INSTANCE("instance"),
	INT("int"),
	INTEGER("integer"),
	INTERSECT("intersect"),
	INTO("into"),
	IS("is"),
	KEY("key"),
	LANGUAGE("language"),
	LAYER("layer"),
	LEVEL("level"),
	LIKE("like"),
	LIMITED("limited"),
	LINK("link"),
	LISTS("lists"),
	LOGFILE("logfile"),
	LOOP("loop"),
	MANAGE("manage"),
	MANUAL("manual"),
	MAX("max"),
	MAXDATAFILES("maxdatafiles"),
	MAXINSTANCES("maxinstances"),
	MAXLOGFILES("maxlogfiles"),
	MAXLOGHISTORY("maxloghistory"),
	MAXLOGMEMBERS("maxlogmembers"),
	MAXTRANS("maxtrans"),
	MAXVALUE("maxvalue"),
	MIN("min"),
	MINEXTENTS("minextents"),
	MINUS("minus"),
	MINVALUE("minvalue"),
	MLSLABEL("mlslabel"),
	MOD("mod"),
	MODE("mode"),
	MODULE("module"),
	MOUNT("mount"),
	NATURAL("natural"),
	NEW("new"),
	NEXT("next"),
	NEXTVAL("nextval"),
	NOARCHIVELOG("noarchivelog"),
	NOCACHE("nocache"),
	NOCOMPRESS("nocompress"),
	NOCYCLE("nocycle"),
	NOMAXVALUE("nomaxvalue"),
	NOMINVALUE("nominvalue"),
	NONE("none"),
	NOORDER("noorder"),
	NORESETLOGS("noresetlogs"),
	NORMAL("normal"),
	NOSORT("nosort"),
	NOT("not"),
	NULL("null"),
	NUMBER("number"),
	NUMBER_BASE("number_base"),
	NUMERIC("numeric"),
	OF("of"),
	OFF("off"),
	OLD("old"),
	ON("on"),
	ONLY("only"),
	OPEN("open"),
	OPTIMAL("optimal"),
	OPTION("option"),
	OR("or"),
	ORDER("order"),
	OTHERS("others"),
	OUT("out"),
	OWN("own"),
	PACKAGE("package"),
	PARALLEL("parallel"),
	PARTITION("partition"),
	PCTFREE("pctfree"),
	PCTINCREASE("pctincrease"),
	PCTUSED("pctused"),
	PLAN("plan"),
	PLI("pli"),
	POSITIVE("positive"),
	PRAGMA("pragma"),
	PRECISION("precision"),
	PRIMARY("primary"),
	PRIOR("prior"),
	PRIVATE("private"),
	PROCEDURE("procedure"),
	PROFILE("profile"),
	PUBLIC("public"),
	QUOTA("quota"),
	RAISE("raise"),
	RANGE("range"),
	READ("read"),
	REAL("real"),
	RECORD("record"),
	RECOVER("recover"),
	REFERENCES("references"),
	REFERENCING("referencing"),
	RELEASE("release"),
	REMR("remr"),
	RENAME("rename"),
	RESETLOGS("resetlogs"),
	RESOURCE("resource"),
	RESTRICTED("restricted"),
	RETURN("return"),
	REUSE("reuse"),
	REVERSE("reverse"),
	REVOKE("revoke"),
	ROLE("role"),
	ROLES("roles"),
	ROLLBACK("rollback"),
	ROWID("rowid"),
	ROWLABEL("rowlabel"),
	ROWNUM("rownum"),
	ROWTYPE("rowtype"),
	RUN("run"),
	SAVEPOINT("savepoint"),
	SCHEMA("schema"),
	SCN("scn"),
	SECTION("section"),
	SEGMENT("segment"),
	SELECT("select"),
	SEPARATE("separate"),
	SEQUENCE("sequence"),
	SET("set"),
	SHARED("shared"),
	SIZE("size"),
	SMALLINT("smallint"),
	SNAPSHOT("snapshot"),
	SOME("some"),
	SORT("sort"),
	SPACE("space"),
	SQL("sql"),
	SQLCODE("sqlcode"),
	SQLERRM("sqlerrm"),
	SQLERROR("sqlerror"),
	SQLSTATE("sqlstate"),
	START("start"),
	STATEMENT("statement"),
	STATEMENT_ID("statement_id"),
	STATISTICS("statistics"),
	STDDEV("stddev"),
	STOP("stop"),
	STORAGE("storage"),
	SUBTYPE("subtype"),
	SUM("sum"),
	SWITCH("switch"),
	SYSTEM("system"),
	TABAUTH("tabauth"),
	TABLE("table"),
	TABLES("tables"),
	TABLESPACE("tablespace"),
	TASK("task"),
	TEMPORARY("temporary"),
	TERMINATE("terminate"),
	THEN("then"),
	CONDITIONAL_THEN("$then"),
	THREAD("thread"),
	TIME("time"),
	TO("to"),
	TRACING("tracing"),
	TRANSACTION("transaction"),
	TRIGGERS("triggers"),
	TRUE("true"),
	TRUNCATE("truncate"),
	TYPE("type"),
	UNDER("under"),
	UNION("union"),
	UNIQUE("unique"),
	UNLIMITED("unlimited"),
	UNTIL("until"),
	UPDATE("update"),
	USE("use"),
	USING("using"),
	VALUES("values"),
	VARCHAR("varchar"),
	VARCHAR2("varchar2"),
	VARIANCE("variance"),
	VIEW("view"),
	VIEWS("views"),
	WHEN("when"),
	WHERE("where"),
	WHILE("while"),
	WITH("with"),
	WORK("work"),
	WRITE("write"),
	XOR("xor"),

 

  // Future reserved words

	//manually added words
	//TODO: might be required to move
	REPLACE("replace")
 
;
	
  private final String value;

  private PlSQLKeyword(String value) {
    this.value = value;
  }

  public String getName() {
    return name();
  }

  public String getValue() {
    return value;
  }

  public boolean hasToBeSkippedFromAst(AstNode node) {
    return false;
  }

  public static String[] keywordValues() {
    PlSQLKeyword[] keywordsEnum = PlSQLKeyword.values();
    String[] keywords = new String[keywordsEnum.length];
    for (int i = 0; i < keywords.length; i++) {
      keywords[i] = keywordsEnum[i].getValue();
    }
    return keywords;
  }

}
